@model CMM.Projects.Apresentation.Models.FuncionarioPesquisaModelView

@{
    ViewBag.Title = "Relatório de Servidor por Benefício";
    ViewData["TituloPagina"] = "Relatório Servidor por Benefício";
}

<!DOCTYPE html>

<div class="row">
    <div class="col-lg-12 col-md-12 col-xl-12">
        <div class="card">
            <div class="card-body">
                <form>
                    <div class="form-row">

                        <div class="form-group col-sm-2">
                            @Html.Label("MATRICULA", htmlAttributes: new { @class = "" })
                            @Html.Editor("MATRICULA", new { htmlAttributes = new { @class = "form-control form-control-sm", @id = "MATRICULA", @onkeyup = "somenteNumeros(this);" } })
                        </div>
                        <div class="form-group col-sm-10">
                            @Html.Label("NOME", htmlAttributes: new { @class = "" })
                            @Html.Editor("NOME", new { htmlAttributes = new { @class = "form-control form-control-sm", @id = "NOME" } })

                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group col-sm-6">
                            @Html.Label("SEXO", htmlAttributes: new { @class = "" })
                            <select id="SEXO" class="form-control form-control-sm">
                                <option value="">-- Todos --</option>
                                <option value="M">Masculino</option>
                                <option value="F">Feminino</option>
                            </select>
                        </div>
                        <div class="form-group col-sm-6">
                            @Html.Label("IDADE", htmlAttributes: new { @class = "" })
                            <select id="IDADE" class=" form-control form-control-sm">
                                <option value="" selected>-- Todos --</option>
                                <option value="1">Até 25 Anos</option>
                                <option value="2">De 26 à 40 Anos</option>
                                <option value="3">De 41 à 55 Anos</option>
                                <option value="4">De 56 à 70 Anos</option>
                                <option value="5">Acima de 70 Anos</option>
                            </select>
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group col-sm-3">
                            @Html.Label("INICIO_PERIODO_ADMISSAO", htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.INICIO_PERIODO_ADMISSAO, new { htmlAttributes = new { @class = "form-control form-control-sm monthpicker" } })
                        </div>
                        <div class="form-group col-sm-3">
                            @Html.Label("FIM_PERIODO_ADMISSAO", htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.FIM_PERIODO_ADMISSAO, new { htmlAttributes = new { @class = "form-control form-control-sm monthpicker" } })
                        </div>
                        <div class="form-group col-sm-3">
                            @Html.Label("INICIO_PERIODO_DEMISSAO", htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.INICIO_PERIODO_DEMISSAO, new { htmlAttributes = new { @class = "form-control form-control-sm monthpicker" } })
                        </div>
                        <div class="form-group col-sm-3">
                            @Html.Label("FIM_PERIODO_DEMISSAO", htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.FIM_PERIODO_DEMISSAO, new { htmlAttributes = new { @class = "form-control form-control-sm monthpicker" } })
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group col-sm-4">
                            @Html.Label("CARGO", htmlAttributes: new { @class = "" })
                            @*@Html.DropDownList("CARGO", (SelectList)ViewBag.Cargo, "-- Todos --", htmlAttributes: new { @class = "form-control form-control-sm", @id = "CARGO" })*@
                            <select id="CARGO" class="s2mult form-control form-control-sm" name="states[]" multiple="multiple">
                                @foreach (var item in (SelectList)ViewBag.Cargo)
                                {
                                    <option value="@item.Value">@item.Text</option>
                                }
                            </select>
                        </div>
                        <div class="form-group col-sm-4">
                            @Html.Label("UNIDADE", htmlAttributes: new { @class = "" })
                            <select id="UNIDADE" class="s2mult form-control form-control-sm" name="states[]" multiple="multiple">
                                @foreach (var item in (SelectList)ViewBag.Unidade)
                                {
                                    <option value="@item.Value">@item.Text</option>
                                }
                            </select>
                        </div>
                        <div class="form-group col-sm-4">
                            @Html.Label("SITUAÇÃO", htmlAttributes: new { @class = "" })
                            @* @Html.DropDownListFor(model => model.SITUACAO, null, "-- Todos --", htmlAttributes: new { @class = "form-control form-control-sm", @id = "SITUACAO" })*@
                            <select id="SITUACAO" class="s2mult form-control form-control-sm" name="states[]" multiple="multiple">
                                @foreach (var item in (SelectList)ViewBag.Situacao)
                                {
                                    if (item.Value == "4")
                                    {
                                        <option value="@item.Value" selected>@item.Text</option>
                                    }
                                    else
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }
                                }
                            </select>
                        </div>

                    </div>
                    <div class="form-row">
                        <div class="form-group col-sm-6">
                            @Html.Label("BENEFÍCIO", htmlAttributes: new { @class = "" })
                            @* @Html.DropDownList("FUNCAO", (SelectList)ViewBag.Funcao, "-- Todos --", htmlAttributes: new { @class = "form-control form-control-sm", @id = "FUNCAO" })*@
                            <select id="BENEFICIO" class="s2mult form-control form-control-sm" name="states[]" multiple="multiple">
                                @foreach (var item in (SelectList)ViewBag.Beneficio)
                                {
                                    <option value="@item.Value">@item.Text</option>
                                }
                            </select>
                        </div>
                        <div class="form-group col-sm-3">
                            @Html.Label("INICIO BENEFÍCIO", htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.INICIO, new { htmlAttributes = new { @class = "form-control form-control-sm monthpicker" } })
                        </div>
                        <div class="form-group col-sm-3">
                            @Html.Label("FIM BENEFÍCIO", htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.FIM, new { htmlAttributes = new { @class = "form-control form-control-sm monthpicker" } })
                        </div>
                    </div>


                </form>
                <hr />
                <div class="pull-right">
                    <button type="button" class="btn btn-sm btn-secondary d-md-inline " onclick="Pesquisar()" id="btnPesquisar"><i class="fa fa-search"></i> Pesquisar</button>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-lg-12 col-md-12 col-xl-12">
        <div class="card">
            <div class="card-body">
                <div class="row m-b-15">
                    <div class="pull-left mb-2 ml-2">
                        <a href="@Url.Action("GerarRelatorioServidorBeneficio", "Funcionario")" target="_blank" class="btn btn-sm btn-outline-primary d-md-inline mr-2" id="btnPdf"><i class="fa fa-check-square-o"></i> Gerar Pdf</a>
                        <a href="@Url.Action("GerarRelatorioServidorBeneficioXLSX", "Funcionario")" target="_blank" class="btn btn-sm btn-outline-success d-md-inline " id="btnXls"><i class="fa fa-check-square-o"></i> Gerar Planilha</a>
                    </div>
                </div>
                <div class="row m-b-15">
                    <table class="table table-sm table-bordered table-striped dt-responsive  dtr-inline collapsed" id="grdMain">
                        <thead class="text-center">
                            <tr>
                                <th>MATRICULA</th>
                                <th>NOME</th>
                                <th>Unidade</th>
                                <th>Cargo</th>
                                <!--<th>Admissão</th>
                                <th>Demissão</th>-->
                                <th>Benefício</th>
                                <th>Inicio</th>
                                <th>Fim</th>


                                <th>Ações</th>
                            </tr>
                        </thead>
                    </table>

                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .select2 {
        width: 100% !important;
    }
</style>
<link href="~/Scripts/Grid/DataTables-1.10.16/css/dataTables.bootstrap4.min.css" rel="stylesheet" />
<link href="~/assets/plugins/bootstrap-datepicker/css/bootstrap-datepicker.min.css" rel="stylesheet" type="text/css">
<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.7/css/select2.min.css" rel="stylesheet" />
@section scripts{
    @Scripts.Render("~/bundles/Grid")
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.7/js/select2.min.js"></script>
    <script src="~/assets/plugins/bootstrap-datepicker/js/bootstrap-datepicker.min.js"></script>
    <script src="~/Scripts/moment.min.js"></script>
    <script src="~/Scripts/Grid/datetime-moment.js"></script>

    <script type="text/javascript">
        var dataTable;

        $(document).ready(function() {
            $('.s2mult').select2();
            $(".monthpicker").datepicker({
                    autoclose: true,
                    language: "pt-BR",
                    format: "dd/mm/yyyy",
                    endDate: 'm'
                });
        });



        function keypressHandler(e) {
            if (e.which == 13) {
                e.preventDefault();
                $(this).blur();
                $('#btnPesquisar').focus().click();
            }
        }

        $(document).keypress(keypressHandler);


        function recuperarTexto(elemento){
            let el = $(elemento + " option:selected").toArray();
            let arr = [];
            if(el.length != 0){
                for(let i=0; i < el.length; i++){
                    arr.push(el[i].textContent.split(" - ")[0]);
                }
            }
            return arr;
        }

        function Pesquisar() {

            if ($.fn.DataTable.isDataTable('#grdMain'))
            {
                dataTable.destroy();

            }
            let dados = {

                pTexoCargo: recuperarTexto("#CARGO"),
                pTextoUnidade: recuperarTexto("#UNIDADE"),
                pTextoSituacao: recuperarTexto("#SITUACAO"),
                PTextoBeneficio: recuperarTexto("#BENEFICIO"),

                pMAT: $('#MATRICULA').val(),
                pNome: $('#NOME').val(),
                pCrg: $('#CARGO').val(),
                pUnd: $('#UNIDADE').val(),
                pVNCST: $('#SITUACAO').val(),
                pBNF: $('#BENEFICIO').val(),
                pSexo: $('#SEXO').val(),
                pIdade: $("#IDADE").val(),
                pInicio_Admissao: $("#INICIO_PERIODO_ADMISSAO").val(),
                pFim_Admissao: $("#FIM_PERIODO_ADMISSAO").val(),
                pInicio_Periodo_Demissao: $("#INICIO_PERIODO_DEMISSAO").val(),
                pFim_Periodo_Demissao: $("#FIM_PERIODO_DEMISSAO").val(),
                pBeneficioInicio: $("#INICIO").val(),
                pBeneficioFim: $("#FIM").val()

                };

            //console.log(dados);
            /*
            backup
                "data": { pMAT: $('#MATRICULA').val(), pNome: $('#NOME').val(), pCrg: $('#CARGO').val(), pUnd: $('#UNIDADE').val(), pVNCTP: $('#TIPO').val(), pVNCST: $('#SITUACAO').val(), pBNF: $('#BENEFICIO').val(), pFuncao: $('#FUNCAO').val(), pSexo: $('#SEXO').val(), pIdade: $("#IDADE").val(), pInicio_Admissao: $("#INICIO_ADMISSAO").val(), pFim_Admissao: $("#FIM_ADMISSAO").val()},
            */

            dataTable= $('#grdMain').DataTable({
                "processing": "true",
                "serverSide": "true",
                "autoWidth": false,
                "responsive":true,
                "ajax": {
                    "data": dados,
                    "url": "@Url.Action("InterfacePesquisaRelatorioBeneficio", "Funcionario")",
                    "type": "POST",
                    "datatype": "json"
                },
                "columns":
                [
                    { "data": "FUN_MATRICULA"},
                    { "data": "FUN_NOME"},
                    { "data": "FUN_UNIDADE" },
                    { "data": "CARGO" },
                   // {"data": "FUN_DATA_ADMISSAO", "render": function (data, type, full, meta) {
                   //     if (data !== null) {
                   //         return moment(data).format('DD/MM/YYYY')
                   //     } else
                   //         return "";

                   // }},
                   //{"data": "FUN_DATA_DEMISSAO", "render": function (data, type, full, meta) {
                   //         if (data !== null) {
                   //             return moment(data).format('DD/MM/YYYY')
                   //         } else
                   //             return "";

                   // }},

                    { "data": "BENEFICIO_NOME" },

                    {"data": "BENEFICIO_DATA_INICIO", "render": function (data, type, full, meta) {
                        if (data !== null) {
                            return moment(data).format('DD/MM/YYYY')
                        } else
                            return "";

                    }},

                    {"data": "BENEFICIO_DATA_FIM", "render": function (data, type, full, meta) {
                        if (data !== null) {
                            return moment(data).format('DD/MM/YYYY')
                        } else
                            return "";

                    }},



                    {
                        "data": "FUN_ID",
                        "render": function(data) {
                            return "<a class='btn-sm btn-outline-primary' target='_blank' href='@Url.Action("Cadastro","Funcionario")/" + data + "')>Visualizar</a>";

                        },
                        "orderable": false,
                        "searchable": false,
                    }
                ],
                "order":
                    [2, "asc"]
                , "dom": '<"top">rt<"bottom"ip><"clear">',
                "deferRender": true
            });
        };

        function LoadFunc(url) {
            location.href = url;

        };

        $('#btnPdf').click(function(){

        });


    </script>
}